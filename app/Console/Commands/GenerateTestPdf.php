<?php

namespace App\Console\Commands;

use App\Facades\ImageSigner;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\Storage;
use Barryvdh\DomPDF\Facade\Pdf;

class GenerateTestPdf extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'pdf:test {--days=1 : Number of days for signed URL}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Generate a test PDF with "Hola", upload to S3, and create signed URL';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        try {
            $this->info('Starting PDF generation test...');

            // Step 1: Generate PDF with "Hola"
            $this->info('📄 Generating PDF with "Hola"...');
            
            $pdf = Pdf::loadHTML('<h1>Hola</h1><p>This is a test PDF generated by Laravel DomPDF.</p>');
            $pdfContent = $pdf->output();

            // Step 2: Upload to S3
            $timestamp = now()->format('Y/m/d/His');
            $fileName = "test-pdf-{$timestamp}.pdf";
            $s3Path = "pdfs/test/{$fileName}";

            $this->info('☁️  Uploading PDF to S3...');
            $uploadResult = Storage::disk('s3')->put($s3Path, $pdfContent, 'private');

            if (!$uploadResult) {
                $this->error('Failed to upload PDF to S3');
                return 1;
            }

            $this->info("✅ PDF uploaded successfully to: {$s3Path}");

            // Step 3: Generate signed URL using ImageSigner
            $this->info('🔐 Generating signed URL...');
            
            $expiryDays = (int) $this->option('days');
            $signedUrlData = ImageSigner::getSignedUrl($s3Path, $expiryDays);

            // Display results
            $this->newLine();
            $this->info('🎉 Test completed successfully!');
            $this->line('📊 Results:');
            $this->line("   📁 S3 Path: {$s3Path}");
            $this->line("   🔗 Signed URL: {$signedUrlData['signed_url']}");
            $this->line("   ⏰ Expires: {$signedUrlData['expires_at']}");
            $this->line("   📅 Valid for: {$expiryDays} day(s)");

            return 0;

        } catch (\Exception $e) {
            $this->error('❌ Error generating test PDF: ' . $e->getMessage());
            $this->error('📍 File: ' . $e->getFile() . ':' . $e->getLine());
            return 1;
        }
    }
}